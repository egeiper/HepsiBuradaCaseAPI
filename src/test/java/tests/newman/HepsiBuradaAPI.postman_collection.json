{
	"info": {
		"_postman_id": "4705d8d9-5b1d-4004-b56e-bf5a8570c24b",
		"name": "HepsiBuradaAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27704778"
	},
	"item": [
		{
			"name": "Post User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response should be ok to process\", function () {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.be.json;",
							"    pm.expect(pm.response.json().code).to.eql(200);",
							"        pm.expect(pm.response.json().type).to.eql(\"unknown\");",
							"});",
							"",
							"pm.test('Json Schema is valid', function () {",
							"  const schema = {",
							"    \"type\": \"object\",",
							"  \"properties\": {",
							"    \"code\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"type\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"message\": {",
							"      \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"code\",",
							"    \"type\",",
							"    \"message\"",
							"  ]",
							"}",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"postman.setNextRequest(\"Get User\");",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{username}}\",\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"phone\": \"{{phoneNumber}}\",\n  \"userStatus\": {{userStatus}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/user",
					"host": [
						"{{URL}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response should be ok to process\", function () {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.be.json;",
							"    pm.expect(pm.response.json().username).to.eql(pm.collectionVariables.get(\"username\"));",
							"    pm.expect(pm.response.json().firstName).to.eql(pm.collectionVariables.get(\"firstName\"));",
							"    pm.expect(pm.response.json().lastName).to.eql(pm.collectionVariables.get(\"lastName\"));",
							"    pm.expect(pm.response.json().email).to.eql(pm.collectionVariables.get(\"email\"));",
							"    pm.expect(pm.response.json().password).to.eql(pm.collectionVariables.get(\"password\"));",
							"    pm.expect(pm.response.json().phone).to.eql(pm.collectionVariables.get(\"phoneNumber\"));",
							"    pm.expect(pm.response.json().userStatus).to.eql(parseInt(pm.collectionVariables.get(\"userStatus\")));",
							"});",
							"",
							"pm.test('Json Schema is valid', function () {",
							"  const schema = {",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"id\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"username\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"firstName\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"lastName\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"email\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"password\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"phone\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"userStatus\": {",
							"      \"type\": \"integer\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"id\",",
							"    \"username\",",
							"    \"firstName\",",
							"    \"lastName\",",
							"    \"email\",",
							"    \"password\",",
							"    \"phone\",",
							"    \"userStatus\"",
							"  ]",
							"}",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"postman.setNextRequest(\"Delete User\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/user/{{username}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"user",
						"{{username}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response should be ok to process\", function () {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.be.json;",
							"    pm.expect(pm.response.json().code).to.eql(200);",
							"    pm.expect(pm.response.json().type).to.eql(\"unknown\");",
							"    pm.expect(pm.response.json().message).to.eql(pm.collectionVariables.get(\"username\"));",
							"",
							"});",
							"",
							"pm.test('Json Schema is valid', function () {",
							"  const schema = {",
							"    \"type\": \"object\",",
							"  \"properties\": {",
							"    \"code\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"type\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"message\": {",
							"      \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"code\",",
							"    \"type\",",
							"    \"message\"",
							"  ]",
							"}",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/user/{{username}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"user",
						"{{username}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "username",
			"value": "egeiper",
			"type": "string"
		},
		{
			"key": "firstName",
			"value": "Ege",
			"type": "string"
		},
		{
			"key": "lastName",
			"value": "Ä°per",
			"type": "string"
		},
		{
			"key": "email",
			"value": "egeiper@hotmail.com",
			"type": "string"
		},
		{
			"key": "userStatus",
			"value": "0",
			"type": "string"
		},
		{
			"key": "password",
			"value": "123",
			"type": "string"
		},
		{
			"key": "phoneNumber",
			"value": "53423",
			"type": "string"
		},
		{
			"key": "URL",
			"value": "https://petstore.swagger.io/v2",
			"type": "string"
		}
	]
}